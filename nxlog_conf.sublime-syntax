%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: NXLog
file_extensions:
  - conf
scope: nxlog.conf

contexts:
  # The prototype context is prepended to all contexts but those setting
  # meta_include_prototype: false.
  prototype:
    - include: comments

  main:
    # The main context is the initial starting point of our syntax.
    # Include other contexts from here (or specify them directly).
    - include: keywords
    - include: directives
    - include: numbers
    - include: strings

  keywords:
    # Keywords are if, else for and while.
    # Note that blackslashes don't need to be escaped within single quoted
    # strings in YAML. When using single quoted strings, only single quotes
    # need to be escaped: this is done by using two single quotes next to each
    # other.
    - match: '\b(if|else|for|while)\b'
      scope: keyword.control.conf

    - match: '^[ \t]*<[^>]+>'
      scope: keyword.control.conf

    - match: '^[ \t]*[A-Z][A-Za-z]+ '
      scope: constant.numeric

  directives:
    - match: '^(include_stdout|include)'
      scope: entity.name.function.conf

    - match: '\b(define)\b +([^ ]+) '
      captures:
        1: entity.name.function.conf
        2: keyword.declaration.function

    - match: '%[^%]+%'
      scope: keyword.declaration.function

  numbers:
    - match: '\b(-)?[0-9.]+\b'
      scope: constant.numeric

  strings:
    # Strings begin and end with double quotes, and use backslashes as an escape
    # character.
    - match: '"'
      scope: punctuation.definition.string.begin.conf
      push: inside_string

  inside_string:
    - meta_include_prototype: false
    - meta_scope: string.quoted.double.conf
    - match: '\.'
      scope: constant.character.escape.conf
    - match: '"'
      scope: punctuation.definition.string.end.conf
      pop: true

  comments:
    # Comments begin with a '#' and finish at the end of the line.
    - match: '^[ \t]*#'
      scope: punctuation.definition.comment.conf
      push:
        # This is an anonymous context push for brevity.
        - meta_scope: comment.line.double-slash.conf
        - match: $\n?
          pop: true
